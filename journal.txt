4/5/2018
First sample is all done, but second sample is coming along as well. Here are my ideas:
  first of all, I need to remember to draw them on paper first, or come up with pseudocode or written description
  still would like white slanted lines with static position toward the bottom, working together with a slanted white-transparent gradient to transition the background image to white (or off-white)
  still would like better background images (semi-opaque parallelograms) for each grid item
  second sample could float sidebar left
  could play with #content-container being a flexbox
  would be nice to have a pretty vertical line separating the sidebar and the content
  figure out an icon indicating to scroll
  need an image behind #splash
  can possibly get rid of grid-gap if keeping as a grid
  
  third sample would have a persistent navbar at the top
    figure out animating relative to scroll position

4/9/2018
Michael selected the first sample, we're going with this design. Here's a workflow for me to get started on:
1. Design
  Making sure that the design is suitable and makes for a pleasant viewing/webbrowsing experience. It should work well with the Django implementation in order for it to become a template.
2. Django backend
  Requirements center around high modulability: 
    Modular features required:
      All featured images (banners, splash, etc)
        These will have to be fully thought/fleshed out. There will have to be a model with a filefield that has the maximum of ONE record. Templates will have to be able to pick up the URL of this uploaded static file and serve it.
      All text features (blog, announcements, etc)
  We also need to know how to Djangoify Michael's calendar setup.
3. Implementation
  Template implementation of html
  PythonAnywhere account setup, venv setup
  
The only trouble area here are the image models, which will require some reading up.
4/18
Working on django models, have fleshed out a way to make only one instance possible, need to recreate this with images and find a way to serve static images.

Still need a solution for the django calendar.

4/26
With last weeks work on views, static files, configuration, etc., the way I see it, only the following now need to be done.
Figure out email list signup
    this can be done with a form that adds to a model
straighten out template files
    reflect background and splash image in <head> under <style>, so as to work with django
        make sure to adjust opacity in the style
    create each granular page
        create views and urls for each page
    animate and prettify pages
        pose.io
        for diagonal lines around divs, think about right triangles glued to the top and bottom
Setup python anywhere
Document website usage

Just as a sanity check, here are the things that Michael asked for:
Info:
    about, mission, contact info, announcements, events
    service times, directions, mission statement, all prominent on front page
Apps:
    About, Calendar, Blog, Email list signup
    About and Calendar should be prominent on the front page
No logos, pictures, other media
No deadline

5/2
Getting some ideas about how I want the site to look and feel besides function. Want the title to slide and fade down, brief delay, then I want the about section to slide and fade up. Then, I want the grid below to slide and fade up when the page scrolls, and slide and fade down when the page is scrolled to the top.

With the parallelogram divs, the navbar looks out of place. I need to figure out a way for it to look natural. A good way that I saw was to have transform: skewX on the items when hovered over with a black(?) background, so they look like parallelograms when they have focus. Another way could be to have skewed vertical dividing lines between each. The trouble is finding an X-oriented skew that works with the Y-oriented skew already on the divs that I have in the grid.

We could also just throw away the skew.

Food for thought. 

Still need to fix forms for email signup, create each template for each view, and need to figure out making the items of the grid not align at the bottom, but align at the top (for example if the Announcements section is longer than the Events/Calendar section, the Events/Calendar div should not stretch to be as long as the Announcements).

form
	check valid email
	.save ()
	maybe make one giant list rather than multiple objects
	if multiple objects, allow compiling to new list
	make new emails easily discernable from old, already done

We need a footer!

5/20
Calendar has been finished in its initial functionality, but we need to "paginate" it in that we need to be able to navigate to different months and see what different events were there. We may be able to do this by having a different view/URL combo that works kind of like _detail pages.

5/22
Blog page can work with pagination in such a way that we can slice one of, say, five blog posts to highlight on the blog page, then we can see the next four as links, then there is a link for "see all." The "see all" link will bring us to a paginated list of blog entries.

We should work on pagination of announcements first, since this will work like the secondary page of the blog.

